// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	domain "github.com/fadliarz/distributed-faas/services/function-service/domain/domain-core"
	mock "github.com/stretchr/testify/mock"
)

// MockFunctionDomainService is an autogenerated mock type for the FunctionDomainService type
type MockFunctionDomainService struct {
	mock.Mock
}

type MockFunctionDomainService_Expecter struct {
	mock *mock.Mock
}

func (_m *MockFunctionDomainService) EXPECT() *MockFunctionDomainService_Expecter {
	return &MockFunctionDomainService_Expecter{mock: &_m.Mock}
}

// ValidateAndInitiateFunction provides a mock function with given fields: function, functionID
func (_m *MockFunctionDomainService) ValidateAndInitiateFunction(function *domain.Function, functionID string) error {
	ret := _m.Called(function, functionID)

	if len(ret) == 0 {
		panic("no return value specified for ValidateAndInitiateFunction")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*domain.Function, string) error); ok {
		r0 = rf(function, functionID)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// MockFunctionDomainService_ValidateAndInitiateFunction_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ValidateAndInitiateFunction'
type MockFunctionDomainService_ValidateAndInitiateFunction_Call struct {
	*mock.Call
}

// ValidateAndInitiateFunction is a helper method to define mock.On call
//   - function *domain.Function
//   - functionID string
func (_e *MockFunctionDomainService_Expecter) ValidateAndInitiateFunction(function interface{}, functionID interface{}) *MockFunctionDomainService_ValidateAndInitiateFunction_Call {
	return &MockFunctionDomainService_ValidateAndInitiateFunction_Call{Call: _e.mock.On("ValidateAndInitiateFunction", function, functionID)}
}

func (_c *MockFunctionDomainService_ValidateAndInitiateFunction_Call) Run(run func(function *domain.Function, functionID string)) *MockFunctionDomainService_ValidateAndInitiateFunction_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*domain.Function), args[1].(string))
	})
	return _c
}

func (_c *MockFunctionDomainService_ValidateAndInitiateFunction_Call) Return(_a0 error) *MockFunctionDomainService_ValidateAndInitiateFunction_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockFunctionDomainService_ValidateAndInitiateFunction_Call) RunAndReturn(run func(*domain.Function, string) error) *MockFunctionDomainService_ValidateAndInitiateFunction_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockFunctionDomainService creates a new instance of MockFunctionDomainService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockFunctionDomainService(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockFunctionDomainService {
	mock := &MockFunctionDomainService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
