// Code generated by protoc-gen-go. DO NOT EDIT.
// source: machine-service/v1/api.proto

package machine_service_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ExecuteFunctionRequest struct {
	InvocationId         string   `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	FunctionId           string   `protobuf:"bytes,2,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	UserId               string   `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	SourceCodeUrl        string   `protobuf:"bytes,4,opt,name=source_code_url,json=sourceCodeUrl,proto3" json:"source_code_url,omitempty"`
	Timestamp            int64    `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsRetry              bool     `protobuf:"varint,6,opt,name=is_retry,json=isRetry,proto3" json:"is_retry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteFunctionRequest) Reset()         { *m = ExecuteFunctionRequest{} }
func (m *ExecuteFunctionRequest) String() string { return proto.CompactTextString(m) }
func (*ExecuteFunctionRequest) ProtoMessage()    {}
func (*ExecuteFunctionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2668edf4a7364e6b, []int{0}
}

func (m *ExecuteFunctionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteFunctionRequest.Unmarshal(m, b)
}
func (m *ExecuteFunctionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteFunctionRequest.Marshal(b, m, deterministic)
}
func (m *ExecuteFunctionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteFunctionRequest.Merge(m, src)
}
func (m *ExecuteFunctionRequest) XXX_Size() int {
	return xxx_messageInfo_ExecuteFunctionRequest.Size(m)
}
func (m *ExecuteFunctionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteFunctionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteFunctionRequest proto.InternalMessageInfo

func (m *ExecuteFunctionRequest) GetInvocationId() string {
	if m != nil {
		return m.InvocationId
	}
	return ""
}

func (m *ExecuteFunctionRequest) GetFunctionId() string {
	if m != nil {
		return m.FunctionId
	}
	return ""
}

func (m *ExecuteFunctionRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *ExecuteFunctionRequest) GetSourceCodeUrl() string {
	if m != nil {
		return m.SourceCodeUrl
	}
	return ""
}

func (m *ExecuteFunctionRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ExecuteFunctionRequest) GetIsRetry() bool {
	if m != nil {
		return m.IsRetry
	}
	return false
}

type ExecuteFunctionResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecuteFunctionResponse) Reset()         { *m = ExecuteFunctionResponse{} }
func (m *ExecuteFunctionResponse) String() string { return proto.CompactTextString(m) }
func (*ExecuteFunctionResponse) ProtoMessage()    {}
func (*ExecuteFunctionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2668edf4a7364e6b, []int{1}
}

func (m *ExecuteFunctionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecuteFunctionResponse.Unmarshal(m, b)
}
func (m *ExecuteFunctionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecuteFunctionResponse.Marshal(b, m, deterministic)
}
func (m *ExecuteFunctionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecuteFunctionResponse.Merge(m, src)
}
func (m *ExecuteFunctionResponse) XXX_Size() int {
	return xxx_messageInfo_ExecuteFunctionResponse.Size(m)
}
func (m *ExecuteFunctionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecuteFunctionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecuteFunctionResponse proto.InternalMessageInfo

func (m *ExecuteFunctionResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ExecuteFunctionResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReexecuteFunctionRequest struct {
	InvocationId         string   `protobuf:"bytes,1,opt,name=invocation_id,json=invocationId,proto3" json:"invocation_id,omitempty"`
	FunctionId           string   `protobuf:"bytes,2,opt,name=function_id,json=functionId,proto3" json:"function_id,omitempty"`
	SourceCodeUrl        string   `protobuf:"bytes,3,opt,name=source_code_url,json=sourceCodeUrl,proto3" json:"source_code_url,omitempty"`
	Timestamp            int64    `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	IsRetry              bool     `protobuf:"varint,5,opt,name=is_retry,json=isRetry,proto3" json:"is_retry,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReexecuteFunctionRequest) Reset()         { *m = ReexecuteFunctionRequest{} }
func (m *ReexecuteFunctionRequest) String() string { return proto.CompactTextString(m) }
func (*ReexecuteFunctionRequest) ProtoMessage()    {}
func (*ReexecuteFunctionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2668edf4a7364e6b, []int{2}
}

func (m *ReexecuteFunctionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReexecuteFunctionRequest.Unmarshal(m, b)
}
func (m *ReexecuteFunctionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReexecuteFunctionRequest.Marshal(b, m, deterministic)
}
func (m *ReexecuteFunctionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReexecuteFunctionRequest.Merge(m, src)
}
func (m *ReexecuteFunctionRequest) XXX_Size() int {
	return xxx_messageInfo_ReexecuteFunctionRequest.Size(m)
}
func (m *ReexecuteFunctionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReexecuteFunctionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReexecuteFunctionRequest proto.InternalMessageInfo

func (m *ReexecuteFunctionRequest) GetInvocationId() string {
	if m != nil {
		return m.InvocationId
	}
	return ""
}

func (m *ReexecuteFunctionRequest) GetFunctionId() string {
	if m != nil {
		return m.FunctionId
	}
	return ""
}

func (m *ReexecuteFunctionRequest) GetSourceCodeUrl() string {
	if m != nil {
		return m.SourceCodeUrl
	}
	return ""
}

func (m *ReexecuteFunctionRequest) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *ReexecuteFunctionRequest) GetIsRetry() bool {
	if m != nil {
		return m.IsRetry
	}
	return false
}

func init() {
	proto.RegisterType((*ExecuteFunctionRequest)(nil), "fadliarz.distributed_faas.machine_service.v1.ExecuteFunctionRequest")
	proto.RegisterType((*ExecuteFunctionResponse)(nil), "fadliarz.distributed_faas.machine_service.v1.ExecuteFunctionResponse")
	proto.RegisterType((*ReexecuteFunctionRequest)(nil), "fadliarz.distributed_faas.machine_service.v1.ReexecuteFunctionRequest")
}

func init() { proto.RegisterFile("machine-service/v1/api.proto", fileDescriptor_2668edf4a7364e6b) }

var fileDescriptor_2668edf4a7364e6b = []byte{
	// 398 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x53, 0xcd, 0xae, 0x12, 0x31,
	0x14, 0x4e, 0x05, 0x06, 0xa8, 0x22, 0x49, 0x17, 0x30, 0x1a, 0x12, 0x09, 0x26, 0x86, 0x85, 0xcc,
	0x04, 0x5d, 0xba, 0x53, 0x31, 0x21, 0xc6, 0xcd, 0x18, 0x37, 0x6e, 0x26, 0xa5, 0x3d, 0x0c, 0x4d,
	0x98, 0xe9, 0xd8, 0xd3, 0x4e, 0xd4, 0x87, 0xf1, 0x1d, 0x7c, 0x04, 0xdf, 0xc2, 0xc7, 0x31, 0xf3,
	0x83, 0x28, 0x90, 0x7b, 0x73, 0x73, 0x73, 0x97, 0xdf, 0x77, 0xce, 0xf9, 0xd2, 0xf3, 0xf5, 0x3b,
	0x74, 0x92, 0x72, 0xb1, 0x53, 0x19, 0x2c, 0x10, 0x4c, 0xa1, 0x04, 0x84, 0xc5, 0x32, 0xe4, 0xb9,
	0x0a, 0x72, 0xa3, 0xad, 0x66, 0xcf, 0xb7, 0x5c, 0xee, 0x15, 0x37, 0xdf, 0x03, 0xa9, 0xd0, 0x1a,
	0xb5, 0x71, 0x16, 0x64, 0xbc, 0xe5, 0x1c, 0x83, 0x66, 0x2e, 0x6e, 0xe6, 0x82, 0x62, 0x39, 0xfb,
	0x4d, 0xe8, 0x68, 0xf5, 0x15, 0x84, 0xb3, 0xf0, 0xce, 0x65, 0xc2, 0x2a, 0x9d, 0x45, 0xf0, 0xc5,
	0x01, 0x5a, 0xf6, 0x94, 0x0e, 0x54, 0x56, 0x68, 0xc1, 0x4b, 0x32, 0x56, 0xd2, 0x27, 0x53, 0x32,
	0xef, 0x47, 0x0f, 0x8e, 0xe4, 0x5a, 0xb2, 0x27, 0xf4, 0xfe, 0xb6, 0x99, 0x2b, 0x5b, 0xee, 0x55,
	0x2d, 0xf4, 0x40, 0xad, 0x25, 0x1b, 0xd3, 0xae, 0x43, 0x30, 0x65, 0xb1, 0x55, 0x15, 0xbd, 0x12,
	0xae, 0x25, 0x7b, 0x46, 0x87, 0xa8, 0x9d, 0x11, 0x10, 0x0b, 0x2d, 0x21, 0x76, 0x66, 0xef, 0xb7,
	0xab, 0x86, 0x41, 0x4d, 0xbf, 0xd1, 0x12, 0x3e, 0x99, 0x3d, 0x9b, 0xd0, 0xbe, 0x55, 0x29, 0xa0,
	0xe5, 0x69, 0xee, 0x77, 0xa6, 0x64, 0xde, 0x8a, 0x8e, 0x04, 0x7b, 0x44, 0x7b, 0x0a, 0x63, 0x03,
	0xd6, 0x7c, 0xf3, 0xbd, 0x29, 0x99, 0xf7, 0xa2, 0xae, 0xc2, 0xa8, 0x84, 0xb3, 0xf7, 0x74, 0x7c,
	0xb6, 0x19, 0xe6, 0x3a, 0x43, 0x60, 0x23, 0xea, 0xa1, 0xe5, 0xd6, 0x61, 0xb3, 0x53, 0x83, 0x98,
	0x4f, 0xbb, 0x29, 0x20, 0xf2, 0x04, 0x9a, 0x4d, 0x0e, 0x70, 0xf6, 0x8b, 0x50, 0x3f, 0x02, 0xb8,
	0x4b, 0xa7, 0x2e, 0x18, 0xd2, 0xba, 0xd6, 0x90, 0xf6, 0x55, 0x86, 0x74, 0xfe, 0x33, 0xe4, 0xc5,
	0x4f, 0x42, 0x1f, 0x7e, 0xa8, 0x23, 0xf0, 0xb1, 0x4e, 0x00, 0xfb, 0x41, 0xe8, 0xf0, 0xc4, 0x24,
	0xf6, 0x36, 0xb8, 0x49, 0x82, 0x82, 0xcb, 0xe9, 0x79, 0xbc, 0xba, 0xa5, 0x4a, 0xfd, 0x53, 0xaf,
	0xf5, 0xe7, 0x34, 0x51, 0x76, 0xe7, 0x36, 0x81, 0xd0, 0x69, 0x78, 0x90, 0x0c, 0xff, 0x91, 0x5c,
	0x94, 0x92, 0x61, 0x23, 0x85, 0x65, 0x25, 0xe7, 0x56, 0xec, 0xc0, 0xfc, 0x3d, 0x8f, 0x04, 0xb2,
	0x30, 0xd1, 0xe1, 0xf9, 0xd5, 0xbc, 0x3a, 0x79, 0x48, 0x5c, 0x2c, 0x37, 0x5e, 0x75, 0x45, 0x2f,
	0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xe5, 0x9a, 0x07, 0x9e, 0x65, 0x03, 0x00, 0x00,
}
